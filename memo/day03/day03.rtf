{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red175\green180\blue186;\red24\green25\blue27;}
{\*\expandedcolortbl;;\cssrgb\c74118\c75686\c77647;\cssrgb\c12549\c12941\c14118;}
\margl1440\margr1440\vieww12220\viewh13580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Cout << 245.78F << \'93 \'93 << 114.782 << \'93 \'93 << 2.051L; \
		float		double 		long double \
				
\f1 \'be\'c6\'b9\'ab\'b0\'cd\'b5\'b5 \'be\'c8\'c0\'fb\'c0\'b8\'b8\'e9 \'b1\'e2\'ba\'bb double 
\f0 \
\
*u = unsigned \
*ul = unsigned long \
\
Int * test() ==\
int* test() ==\
Int *test()  !=\
\
\
3
\f1 \'b9\'f8\'c2\'b0 \'bc\'d2\'bd\'ba => \'b4\'dc\'c7\'d7 \'bf\'ac\'bb\'ea\'c0\'da (\'c7\'a5\'c7\'f6\'bd\'c4) \
\
\'b4\'dc\'c7\'d7 \'bf\'ac\'bb\'ea\'c0\'da -> \'c7\'cf\'b3\'aa\'c0\'c7 \'b0\'aa\'bf\'a1 +, - \'b5\'ee\'c0\'c7 \'bf\'ac\'bb\'ea\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2\'b0\'cd \
\
Int x = 4; \
Int y = -10;\
	<< +x << ( \'be\'e7\'bc\'f6\'b8\'a6 \'c0\'fb\'bf\'eb\'c7\'d8\'b6\'f3)\
	<< -x <<  ( \'c0\'bd\'bc\'f6\'b8\'a6 \'c0\'fb\'bf\'eb\'c7\'d8\'b6\'f3) \
\
Sizeof -> \'b4\'dc\'c7\'d7 \'c7\'a5\'c7\'f6\'bd\'c4 -> \'c0\'da\'b7\'e1\'c0\'c7 \'c5\'a9\'b1\'e2 \'c8\'ae\'c0\'ce\'c7\'d2\'b6\'a7 \'bb\'e7\'bf\'eb \
sizeof(int) -> 4byte\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'c7\'a5\'bd\'c3 \
\
/ -> \'b3\'aa\'b4\'a9\'b1\'e2 (\'b8\'f2)\
% -> \'b3\'aa\'b4\'a9\'b1\'e2 (\'b3\'aa\'b8\'d3\'c1\'f6 \'b0\'aa) \
\
A = A + 40 -> \'c0\'cc\'c7\'d7 \'bf\'ac\'bb\'ea\'c0\'da \
A += 40; // \'c0\'cc\'c7\'d7 \'bf\'ac\'bb\'ea\'c0\'da , OP \'bf\'ac\'bb\'ea\'c0\'da (\'ba\'b9\'c7\'d5 \'bf\'ac\'bb\'ea\'c0\'da) \
\
* Entity\'b8\'a6 \'ba\'ce\'b8\'a3\'b4\'c2\'bf\'eb\'be\'ee \
lvalue \'b9\'d7 rvalue (left value , right value) \'b0\'aa\'c0\'bb \'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1 \'b3\'f5\'c0\'bb\'b0\'cd\'c0\'cc\'b3\'aa \'bf\'de\'c2\'ca\'bf\'a1 \'b3\'f5\'c0\'bb\'b0\'cd\'c0\'cc\'b3\'c4 \
-> \'bf\'de\'c2\'ca \'b0\'aa, \'bf\'c0\'b8\'a5\'c2\'ca \'b0\'aa \'c0\'cc\'b6\'f3\'b0\'ed \'c7\'d8\'bc\'ae\'c7\'cf\'b8\'e9 \'be\'c8\'b5\'ca ( Entity\'bf\'a3\'c6\'bc\'c6\'bc(\'c0\'da\'b7\'e1)\'b7\'ce \'c7\'d8\'bc\'ae\'c7\'d8\'be\'df\'b5\'ca) \
-> \'ba\'af\'bc\'f6\'b0\'a1 \'c7\'d2\'b4\'e7\'c7\'d8\'c1\'d6\'b4\'c2 \'bf\'ac\'bb\'ea\'c0\'da\'c0\'c7 \'bf\'de\'c2\'ca\'bf\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 lvalue , \'ba\'af\'bc\'f6\'b0\'a1 \'c7\'d2\'b4\'e7\'c7\'d8\'c1\'d6\'b4\'c2 \'bf\'ac\'bb\'ea\'c0\'da\'c0\'c7 \'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 rvalue\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The entities of a C++ program are values, objects, references, structured bindings (since C++17), functions, enumerators, types, class members, templates, template specializations, parameter packs (since C++11), and namespaces.\'a0
\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
#include<typeinfo> \
	      -> typeid(\'c7\'a5\'c7\'f6\'bd\'c4).name() => \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c7\'fc \'ba\'af\'c8\'af\'c0\'bb \'c0\'a7\'c7\'d8 \'be\'b4\'b4\'d9 \
 => \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'c8\'ae\'c0\'ce\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c7\'ec\'b4\'f5 \'c6\'c4\'c0\'cf\
\
\'c0\'da\'b7\'e1\'c7\'fc \'ba\'af\'c8\'af => \'be\'cf\'bd\'c3\'c0\'fb \'c0\'da\'b7\'e1\'c7\'fc \'ba\'af\'c8\'af ->  \'c0\'da\'b5\'bf \'c7\'fc \'ba\'af\'c8\'af \
		(\'bf\'ac\'bb\'ea\'c1\'f6 \'b5\'e9\'be\'ee\'b0\'a1\'be\'df \'ba\'af\'c8\'af\'b0\'a1\'b4\'c9)\
\
		\'bf\'f8\'b7\'a1 \'c0\'da\'b7\'e1\'c7\'fc 		\'ba\'af\'c8\'af \'b5\'c8 \'c0\'da\'b7\'e1\'c7\'fc \
		bool 			int\
		char 			int\
		short			int\
		unsigned short	unsigned int\
		float 			double \
\
\
-Short\'bf\'cd float\'bf\'a1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea\'c0\'da\'b8\'a6 \'c0\'fb\'bf\'eb\'c7\'cf\'b8\'e9 \'b0\'e1\'b0\'fa\'b0\'a1 \
(short\'bf\'a1 literal\'c0\'cc \'be\'f8\'b1\'e2\'b6\'a7\'b9\'ae\'bf\'a1 short+short\'c7\'cf\'b8\'e9 int\'b0\'a1 \'b3\'aa\'bf\'c2\'b4\'d9) \
\
PAGE 4)\
\
\'c0\'da\'b7\'e1\'c7\'fc\'c0\'c7 \'b0\'e8\'c3\'fe \
\
\'b3\'b7\'c0\'ba \'b4\'dc\'b0\'e8									\'b3\'f4\'c0\'ba \'b4\'dc\'b0\'e8 \
Int 	->	u int	->	long	->	u long		-> double	-> long double\
(\'b3\'b7\'c0\'ba \'b0\'e8\'c3\'fe\'b0\'fa \'b1\'d7 \'c0\'a7\'c0\'c7 \'b3\'f4\'c0\'ba \'b0\'e8\'c3\'fe\'b3\'a2\'b8\'ae \'b4\'f5\'c7\'cf\'b8\'e9 \'c0\'a7\'c0\'c7 \'b3\'f4\'c0\'ba \'b0\'e8\'c3\'fe\'c0\'cc \'b3\'aa\'bf\'c2\'b4\'d9) \
\
\
\'b8\'b6\'c1\'f6\'b8\'b7 \'c4\'da\'b5\'e5)\
1. \'be\'cf\'bd\'c3\'c0\'fb \'c0\'da\'b7\'e1\'c7\'fc \'ba\'af\'c8\'af \
2. \'b8\'ed\'bd\'c3\'c0\'fb \'c0\'da\'b7\'e1\'c7\'fc \'ba\'af\'c8\'af (\'c4\'b3\'bd\'ba\'c6\'c3) => \'c7\'c7\'bf\'ac\'bb\'ea\'c0\'da\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 \'bf\'f8\'c7\'cf\'b4\'c2 \'c7\'fc\'c5\'c2\'b7\'ce \'b0\'ad\'c1\'a6\'b7\'ce \'ba\'af\'c8\'af \'c7\'d1\'b4\'d9. \
				      \'bf\'a9\'b7\'af\'b0\'a1\'c1\'f6\'c0\'c7 \'c4\'b3\'bd\'ba\'c6\'c3 (\'c7\'fc \'ba\'af\'c8\'af\'c1\'df) \'c1\'df\'bf\'a1\'bc\'ad static_cast \
-> \'c7\'fc \'ba\'af\'c8\'af \'c7\'d2\'b6\'a7\'b8\'b8 \'b0\'aa\'c0\'cc \'b9\'d9\'b2\'ee\'b0\'ed, \'bf\'f8\'b7\'a1 \'b0\'aa\'c0\'ba \'b9\'d9\'b2\'ee\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9. \
		static_cast<\'c0\'da\'b7\'e1\'c7\'fc>(\'c7\'a5\'c7\'f6\'bd\'c4)  \
\
_____________\
\'c7\'a5\'c7\'f6\'b9\'e6\'b9\'fd: \
Cin >> \'ba\'af\'bc\'f6 \
Cout << \'b0\'aa \
\
\'ba\'af\'bc\'f6 1. \'c1\'f6\'bf\'aa\'ba\'af\'bc\'f6 => \'bc\'b1\'be\'f0\'b0\'fa \'b5\'bf\'bd\'c3\'bf\'a1 \'c3\'ca\'b1\'e2\'c8\'ad \'c7\'d8\'c1\'d8\'b4\'d9\
        2. \'c0\'fc\'bf\'aa\'ba\'af\'bc\'f6 => \'b1\'e2\'ba\'bb\'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad \'c7\'d1\'b4\'d9(\'c0\'da\'b5\'bf \'c3\'ca\'b1\'e2\'c8\'ad) \
			\'c1\'a4\'bc\'f6 => 0, \'bd\'c7\'bc\'f6 => 0.0, \'b9\'ae\'c0\'da => 0, boolean => 0\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad \
        3. \'bb\'f3\'bc\'f6 => \'b0\'aa\'c0\'bb \'c3\'ca\'b1\'e2\'c8\'ad \'c7\'d1 \'c8\'c4\'bf\'a1 \'ba\'af\'b0\'e6\'c7\'d2 \'bc\'f6 \'be\'f8\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'c0\'a7\'c4\'a1\'c0\'cc\'b4\'d9\
		  \'bb\'f3\'bc\'f6\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b7\'c1\'b8\'e9 \'bb\'f3\'bc\'f6\'b8\'a6 \'bc\'b1\'be\'f0\'c7\'d8\'c1\'e0\'be\'df \'c7\'d1\'b4\'d9 \
		  \'bc\'b1\'be\'f0\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'ba \'c0\'da\'b7\'e1\'c7\'fc \'be\'d5\'bf\'a1 const\'b8\'a6 \'bc\'b1\'be\'f0\
		  \'b9\'dd\'b5\'e5\'bd\'c3 \'bc\'b1\'be\'f0\'b0\'fa \'b5\'bf\'bd\'c3\'bf\'a1 \'c3\'ca\'b1\'e2\'c8\'ad \
		  \'b4\'eb\'b9\'ae\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'cf\'b9\'dd \'ba\'af\'bc\'f6\'bf\'cd \'b1\'b8\'ba\'d0\'c0\'bb \'c1\'f8\'b4\'d9\
	  	  \'bc\'b1\'be\'f0 \'c0\'a7\'c4\'a1\'b4\'c2 \'c0\'fc\'bf\'aa \'ba\'af\'bc\'f6 \'c0\'a7\'c4\'a1\'bf\'a1 \'bc\'b1\'be\'f0 \'c7\'d1\'b4\'d9 \
		  ex) const int NUMBER = 100; \
\
_____________\
\
\'c1\'b6\'b0\'c7\'b9\'ae \
\
If \'b1\'b8\'b9\'ae \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}